@isTest
public class RewardsCalloutServiceTest {
    
    @testSetup
    static void setup() {
        //Create User
        User test = new User(FirstName = 'Test', 
                             LastName = 'User',  
                             Email = 'test@testing.com',
                             Username = 'test@testing.com.chewie625',
                             Alias = 'Test',
                             TimeZoneSidKey = 'America/Los_Angeles',
                             LocaleSidKey ='en_US',
                             EmailEncodingKey ='UTF-8',
                             ProfileId = '00ebm0000068HcvAAE',
                             LanguageLocaleKey='en_US');
        insert test;
        
        List<Wellness_Journey__c> WJ = new List<Wellness_Journey__c>();
        // insert 20 Wellness_Journey with status = complete
        for (Integer i=0;i<13;i++) {
            WJ.add(new Wellness_Journey__c(name='Wellness Journey '+i,
                                           OwnerId = test.Id,
                                           Status__c = 'Complete',
                                           Completion_Date__c = Date.newInstance(2024, 8, 23)));
        }
        insert WJ;
    }
    
    @isTest static void testPostCallout(){
        // Set mock callout class
        
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new RewardsCalloutServiceMock());
        WellnessJourneyRewardsBatch batch = new WellnessJourneyRewardsBatch();
        Database.executeBatch(batch);
        Test.stopTest();
        integer wJcOunt = [SELECT count() From Wellness_Journey__c];
        system.debug('wJcOunt: ' + wJcOunt);
        system.assertEquals(wJcOunt, 13);

        
    }
}